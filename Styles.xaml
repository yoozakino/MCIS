<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Градиенты -->
    <LinearGradientBrush x:Key="HoverGradientBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="#FFA500" Offset="0"/>
        <GradientStop Color="#FFD700" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ClickGradientBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="#FFA500" Offset="0"/>
        <GradientStop Color="LightBlue" Offset="1"/>
    </LinearGradientBrush>

    <!-- Стили для кнопок -->
    <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="PlumbBoldC"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="25"/>
        <Setter Property="Background" Value="Gold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="7" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1.7" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HoverGradientBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HoverGradientBrush}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ClickGradientBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ClickGradientBrush}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стили для текста -->
    <Style x:Key="WelcomeTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="PlumbBoldC"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Margin" Value="0,88,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Height" Value="67"/>
        <Setter Property="Width" Value="432"/>
    </Style>

    <!-- Стили для фона окна -->
    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/start_background.jpg" Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Дополнительные стили для Program.xaml -->

    <!-- Стиль для кнопок с золотым фоном -->
    <Style x:Key="GoldButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource RoundedButtonStyle}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,10"/>
    </Style>

    <!-- Стиль для кнопок с увеличенным отступом (30px снизу) -->
    <Style x:Key="GoldButtonStyleWithBottomMargin" TargetType="{x:Type Button}" BasedOn="{StaticResource GoldButtonStyle}">
        <Setter Property="Margin" Value="0,30"/>
    </Style>

    <!-- Стиль для кнопок в верхней панели -->
    <Style x:Key="TopPanelButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource GoldButtonStyle}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="100,5"/>
    </Style>

    <!-- Стиль для фона окна Program -->
    <Style x:Key="ProgramWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/main_background.jpg" Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для DataGrid -->
    <Style x:Key="DefaultDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="FontFamily" Value="PlumbBoldC"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="White"/>
        <Setter Property="AlternatingRowBackground" Value="#F0F0F0"/>
        <Setter Property="ColumnHeaderHeight" Value="30"/>
        <Setter Property="RowHeight" Value="25"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
    </Style>

    <!-- Стиль для текста в ячейках DataGrid -->
    <Style x:Key="DataGridCellTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="PlumbBoldC"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- Стиль для заголовков столбцов DataGrid -->
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontFamily" Value="PlumbBoldC"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="#FFDDDDDD"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- Стили для TextBox -->
    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1.7" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- Стили для PasswordBox -->
    <SolidColorBrush x:Key="TextBox.Static.Border1" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border1" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border1" Color="#FF569DE5"/>
    <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border1}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1.7" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- Стили для Label -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="PlumbBoldC"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- Стили для фона окна -->
    <Style x:Key="SignUpWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Images/sign_up_background.jpeg" Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>